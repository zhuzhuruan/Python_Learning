# -*- coding:utf-8 -*-
""""""
"""
-------------------------------------------------包-------------------------------------------------
一、什么是包
1、定义：包就是包含有__init__.py文件的文件夹

2、包的本质是模块的一种形式，用来被当做模块导入
    
    import package_m发生的三件事：            
        （1）产生一个名称空间
        （2）运行包下的__init__.py文件，将运行过程中产生的名字放到（1）的名称空间中
        （3）在当前执行文件的名称空间中拿到包的名字，该名字指向（1）的名称空间

    注意：
        1. 在python3中，即使包下没有__init__.py文件，import 包仍然不会报错，而在python2中，包下一定要有该文件，否则import包报错
        2. 创建包的目的不是为了运行，而是被导入使用，记住，包只是模块的一种形式而已，包的本质就是一种模


二、为什么要有包
    随着模块数目的增多，把所有模块不加区分地放到一起也是极不合理的，于是Python为我们提供了一种把模块组织到一起的方法，即创建一个包。
包就是一个含有__init__.py文件的文件夹，文件夹内可以组织子模块或子包。例如原本把所有功能都写在package_m.py模块中，随着功能的增加，
管理难度增加，因此把package_m.py模块中的功能分散在mm1.py、mm2.py和mm3.py三个文件中，把这三个文件放在名为package_md的包下。

# 执行文件
    import package_m       # import __init__.py

# __init.py__文件
    from package_m import mm1
    from package_m import mm2
    from package_m import mm3







     
     
                 
"""
import practice_file.package_m
get()

